"""
–°–∫—Ä–∏–ø—Ç –∑–∞ –∫–æ–º–ø–∏–ª–∏—Ä–∞–Ω–µ –Ω–∞ CVRP –ø—Ä–æ–≥—Ä–∞–º–∞—Ç–∞ –≤ EXE —Ñ–∞–π–ª
–ò–∑–ø–æ–ª–∑–≤–∞ PyInstaller –∑–∞ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ standalone EXE
"""

import os
import sys
import subprocess
import shutil
from pathlib import Path

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–≤–∞ –¥–∞–ª–∏ —Å–∞ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∏—Ç–µ –ø–∞–∫–µ—Ç–∏"""
    required_packages = ['pyinstaller', 'ortools', 'pandas', 'openpyxl']
    
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
    
    missing_packages = []
    for package in required_packages:
        try:
            __import__(package)
            print(f"‚úÖ {package} - OK")
        except ImportError:
            print(f"‚ùå {package} - –ù–ï –ï –ò–ù–°–¢–ê–õ–ò–†–ê–ù")
            missing_packages.append(package)
    
    if missing_packages:
        print(f"\n‚ùå –õ–∏–ø—Å–≤–∞—Ç –ø–∞–∫–µ—Ç–∏: {', '.join(missing_packages)}")
        return False
    
    return True

def install_dependencies():
    """–ò–Ω—Å—Ç–∞–ª–∏—Ä–∞ –ª–∏–ø—Å–≤–∞—â–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    print("\nüì¶ –ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–º –ª–∏–ø—Å–≤–∞—â–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
    
    packages = ['pyinstaller', 'ortools', 'pandas', 'openpyxl']
    
    for package in packages:
        try:
            subprocess.check_call([sys.executable, '-m', 'pip', 'install', package])
            print(f"‚úÖ {package} - –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω")
        except subprocess.CalledProcessError:
            print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –Ω–∞ {package}")
            return False
    
    return True

def create_spec_file():
    """–°—ä–∑–¥–∞–≤–∞ .spec —Ñ–∞–π–ª –∑–∞ PyInstaller"""
    spec_content = '''# -*- mode: python ; coding: utf-8 -*-

block_cipher = None

a = Analysis(
    ['main_exe.py'],
    pathex=[],
    binaries=[],
    datas=[
        ('config.py', '.'),
        ('input_handler.py', '.'),
        ('warehouse_manager.py', '.'),
        ('cvrp_solver.py', '.'),
        ('output_handler.py', '.'),
        ('osrm_client.py', '.'),
        ('data', 'data'),
    ],
    hiddenimports=[
        'ortools',
        'pandas',
        'openpyxl',
        'requests',
        'numpy',
        'multiprocessing',
        'logging',
        'pathlib',
        'typing',
        'dataclasses',
        'copy',
        'time',
        'os',
        'sys'
    ],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name='CVRP_Optimizer',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=True,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
    icon=None
)
'''
    
    with open('CVRP_Optimizer.spec', 'w', encoding='utf-8') as f:
        f.write(spec_content)
    
    print("‚úÖ –°—ä–∑–¥–∞–¥–µ–Ω CVRP_Optimizer.spec —Ñ–∞–π–ª")

def build_exe():
    """–ö–æ–º–ø–∏–ª–∏—Ä–∞ EXE —Ñ–∞–π–ª–∞"""
    print("\nüî® –°—Ç–∞—Ä—Ç–∏—Ä–∞–º –∫–æ–º–ø–∏–ª–∏—Ä–∞–Ω–µ –Ω–∞ EXE...")
    
    try:
        # –ò–∑–ø–æ–ª–∑–≤–∞–º–µ .spec —Ñ–∞–π–ª–∞ –∑–∞ –ø–æ-–¥–æ–±—ä—Ä –∫–æ–Ω—Ç—Ä–æ–ª
        subprocess.check_call([
            sys.executable, '-m', 'PyInstaller',
            '--clean',
            'CVRP_Optimizer.spec'
        ])
        
        print("‚úÖ EXE —Ñ–∞–π–ª—ä—Ç –µ —Å—ä–∑–¥–∞–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ —Ñ–∞–π–ª—ä—Ç —Å—ä—â–µ—Å—Ç–≤—É–≤–∞
        exe_path = Path('dist/CVRP_Optimizer.exe')
        if exe_path.exists():
            print(f"üìÅ EXE —Ñ–∞–π–ª: {exe_path.absolute()}")
            return True
        else:
            print("‚ùå EXE —Ñ–∞–π–ª—ä—Ç –Ω–µ –µ —Å—ä–∑–¥–∞–¥–µ–Ω!")
            return False
            
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∫–æ–º–ø–∏–ª–∏—Ä–∞–Ω–µ: {e}")
        return False

def create_batch_file():
    """–°—ä–∑–¥–∞–≤–∞ .bat —Ñ–∞–π–ª –∑–∞ –ª–µ—Å–Ω–æ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ"""
    batch_content = '''@echo off
echo CVRP Optimizer - –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ...
echo.

REM –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ –∏–º–∞ –≤—Ö–æ–¥–µ–Ω —Ñ–∞–π–ª
if exist "data\\input.xlsx" (
    echo –ù–∞–º–µ—Ä–µ–Ω –≤—Ö–æ–¥–µ–Ω —Ñ–∞–π–ª: data\\input.xlsx
    CVRP_Optimizer.exe data\\input.xlsx
) else (
    echo –í—Ö–æ–¥–µ–Ω —Ñ–∞–π–ª –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω. –°—Ç–∞—Ä—Ç–∏—Ä–∞–º —Å –ø–æ–¥—Ä–∞–∑–±–∏—Ä–∞–Ω–µ...
    CVRP_Optimizer.exe
)

echo.
echo –ù–∞—Ç–∏—Å–Ω–µ—Ç–µ Enter –∑–∞ –¥–∞ –∑–∞—Ç–≤–æ—Ä–∏—Ç–µ...
pause
'''
    
    with open('start_cvrp.bat', 'w', encoding='utf-8') as f:
        f.write(batch_content)
    
    print("‚úÖ –°—ä–∑–¥–∞–¥–µ–Ω start_cvrp.bat —Ñ–∞–π–ª")

def main():
    """–ì–ª–∞–≤–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ CVRP Optimizer - EXE Builder")
    print("=" * 40)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏—Ç–µ
    if not check_dependencies():
        print("\n‚ùå –õ–∏–ø—Å–≤–∞—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏!")
        if input("–ò—Å–∫–∞—Ç–µ –ª–∏ –¥–∞ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–º –ª–∏–ø—Å–≤–∞—â–∏—Ç–µ –ø–∞–∫–µ—Ç–∏? (y/n): ").lower() == 'y':
            if not install_dependencies():
                print("‚ùå –ù–µ —É—Å–ø—è—Ö –¥–∞ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏—Ç–µ!")
                return
        else:
            print("‚ùå –ù–µ –º–æ–∂–µ—Ç–µ –¥–∞ –ø—Ä–æ–¥—ä–ª–∂–∏—Ç–µ –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∏—Ç–µ –ø–∞–∫–µ—Ç–∏!")
            return
    
    # 2. –°—ä–∑–¥–∞–≤–∞–º–µ .spec —Ñ–∞–π–ª–∞
    create_spec_file()
    
    # 3. –ö–æ–º–ø–∏–ª–∏—Ä–∞–º–µ EXE
    if build_exe():
        # 4. –°—ä–∑–¥–∞–≤–∞–º–µ .bat —Ñ–∞–π–ª
        create_batch_file()
        
        print("\nüéâ –°—ä–∑–¥–∞–≤–∞–Ω–µ—Ç–æ –Ω–∞ EXE —Ñ–∞–π–ª–∞ –∑–∞–≤—ä—Ä—à–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìã –°–ª–µ–¥–≤–∞—â–∏ —Å—Ç—ä–ø–∫–∏:")
        print("1. –ö–æ–ø–∏—Ä–∞–π—Ç–µ dist/CVRP_Optimizer.exe –≤ –∂–µ–ª–∞–Ω–∞—Ç–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è")
        print("2. –°—ä–∑–¥–∞–π—Ç–µ data/input.xlsx —Ñ–∞–π–ª —Å –≤–∞—à–∏—Ç–µ –¥–∞–Ω–Ω–∏")
        print("3. –°—Ç–∞—Ä—Ç–∏—Ä–∞–π—Ç–µ CVRP_Optimizer.exe –∏–ª–∏ start_cvrp.bat")
        
    else:
        print("\n‚ùå –°—ä–∑–¥–∞–≤–∞–Ω–µ—Ç–æ –Ω–∞ EXE —Ñ–∞–π–ª–∞ —Å–µ –ø—Ä–æ–≤–∞–ª–∏!")

if __name__ == "__main__":
    main() 