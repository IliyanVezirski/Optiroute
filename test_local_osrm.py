"""
–¢–µ—Å—Ç —Å–∫—Ä–∏–ø—Ç –∑–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ª–æ–∫–∞–ª–µ–Ω OSRM —Å—ä—Ä–≤—ä—Ä
"""

import requests
import json
from config import get_config

def test_local_osrm_connection():
    """–¢–µ—Å—Ç–≤–∞ –≤—Ä—ä–∑–∫–∞—Ç–∞ —Å –ª–æ–∫–∞–ª–Ω–∏—è OSRM —Å—ä—Ä–≤—ä—Ä"""
    config = get_config().osrm
    
    print(f"üîç –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ –≤—Ä—ä–∑–∫–∞ —Å –ª–æ–∫–∞–ª–µ–Ω OSRM —Å—ä—Ä–≤—ä—Ä: {config.base_url}")
    print("-" * 60)
    
    try:
        # –¢–µ—Å—Ç –Ω–∞ –æ—Å–Ω–æ–≤–Ω–∏—è endpoint
        response = requests.get(config.base_url, timeout=5)
        print(f"üì° –û—Ç–≥–æ–≤–æ—Ä –æ—Ç {config.base_url}: –∫–æ–¥ {response.status_code}")
        
        # –¢–µ—Å—Ç –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω–∏ endpoints
        endpoints = ["/health", ""]
        
        for endpoint in endpoints:
            try:
                url = f"{config.base_url}{endpoint}"
                resp = requests.get(url, timeout=5)
                print(f"üì° {url}: –∫–æ–¥ {resp.status_code}")
                if resp.status_code == 200:
                    print("‚úÖ –õ–æ–∫–∞–ª–µ–Ω OSRM —Å—ä—Ä–≤—ä—Ä –µ –¥–æ—Å—Ç—ä–ø–µ–Ω")
                    return True
            except:
                pass
        
        # –ê–∫–æ –Ω–∏–∫–æ–π endpoint –Ω–µ –≤—ä—Ä–Ω–µ 200, –Ω–æ –∏–º–∞ –æ—Ç–≥–æ–≤–æ—Ä
        if response.status_code in [400, 404]:
            print("‚úÖ –õ–æ–∫–∞–ª–µ–Ω OSRM —Å—ä—Ä–≤—ä—Ä —Ä–∞–±–æ—Ç–∏ (–æ—á–∞–∫–≤–∞ –ø—Ä–∞–≤–∏–ª–Ω–∏ –∑–∞—è–≤–∫–∏)")
            return True
        else:
            print(f"‚ö†Ô∏è –ù–µ–æ—á–∞–∫–≤–∞–Ω –æ—Ç–≥–æ–≤–æ—Ä –æ—Ç OSRM —Å—ä—Ä–≤—ä—Ä")
            return False
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –õ–æ–∫–∞–ª–µ–Ω OSRM —Å—ä—Ä–≤—ä—Ä –Ω–µ –µ –¥–æ—Å—Ç—ä–ø–µ–Ω")
        print("üí° –°—Ç–∞—Ä—Ç–∏—Ä–∞–π—Ç–µ OSRM —Å—ä—Ä–≤—ä—Ä –Ω–∞ localhost:5000")
        return False
    except Exception as e:
        print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ OSRM: {e}")
        return False

def test_local_osrm_matrix():
    """–¢–µ—Å—Ç–≤–∞ matrix –∑–∞—è–≤–∫–∞ –∫—ä–º –ª–æ–∫–∞–ª–Ω–∏—è OSRM —Å—ä—Ä–≤—ä—Ä"""
    config = get_config().osrm
    
    print(f"\nüó∫Ô∏è –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ matrix –∑–∞—è–≤–∫–∞")
    print("-" * 40)
    
    # –¢–µ—Å—Ç –ª–æ–∫–∞—Ü–∏–∏ –≤ –°–æ—Ñ–∏—è
    locations = [
        (42.6977, 23.3219),  # –°–æ—Ñ–∏—è —Ü–µ–Ω—Ç—ä—Ä
        (42.7014, 23.3206),  # –ë–ª–∏–∑–æ –¥–æ —Ü–µ–Ω—Ç—ä—Ä–∞
    ]
    
    # –ü–æ—Å—Ç—Ä–æ—è–≤–∞–Ω–µ –Ω–∞ URL
    coords_str = ';'.join([f"{lon},{lat}" for lat, lon in locations])
    url = f"{config.base_url}/table/v1/{config.profile}/{coords_str}"
    
    try:
        print(f"üì° –ó–∞—è–≤–∫–∞: {url}")
        response = requests.get(url, timeout=config.timeout_seconds)
        
        print(f"üì° –°—Ç–∞—Ç—É—Å –∫–æ–¥: {response.status_code}")
        
        if response.status_code != 200:
            print(f"‚ùå HTTP –≥—Ä–µ—à–∫–∞: {response.status_code}")
            print(f"üìÑ –û—Ç–≥–æ–≤–æ—Ä: {response.text[:200]}")
            return False
        
        data = response.json()
        print(f"üìÑ OSRM –∫–æ–¥: {data.get('code', '–ù—è–º–∞ –∫–æ–¥')}")
        print(f"üìÑ –ö–ª—é—á–æ–≤–µ: {list(data.keys())}")
        
        if data.get('code') == 'Ok':
            print("‚úÖ Matrix –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–∞!")
            
            if 'durations' in data:
                durations = data['durations']
                duration_min = durations[0][1] / 60
                
                # –ê–∫–æ –∏–º–∞ distances, –∏–∑–ø–æ–ª–∑–≤–∞–º–µ –≥–∏
                if 'distances' in data:
                    distances = data['distances']
                    distance_km = distances[0][1] / 1000
                    print(f"üìè –†–∞–∑—Å—Ç–æ—è–Ω–∏–µ: {distance_km:.2f} –∫–º")
                else:
                    # –ò–∑—á–∏—Å–ª—è–≤–∞–º–µ —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –≤—Ä–µ–º–µ—Ç–æ
                    distance_km = (duration_min / 60) * config.average_speed_kmh
                    print(f"üìè –ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª–Ω–æ —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ: {distance_km:.2f} –∫–º (–æ—Ç –≤—Ä–µ–º–µ)")
                
                print(f"‚è±Ô∏è –í—Ä–µ–º–µ: {duration_min:.1f} –º–∏–Ω—É—Ç–∏")
                return True
            else:
                print(f"‚ùå –õ–∏–ø—Å–≤–∞ durations –≤ –æ—Ç–≥–æ–≤–æ—Ä–∞")
                return False
        else:
            print(f"‚ùå OSRM –≥—Ä–µ—à–∫–∞: {data.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞ –≥—Ä–µ—à–∫–∞')}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ matrix –∑–∞—è–≤–∫–∞: {e}")
        return False

def test_osrm_client():
    """–¢–µ—Å—Ç–≤–∞ OSRM –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞—Ç–∞"""
    print(f"\nüîß –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ OSRM –∫–ª–∏–µ–Ω—Ç")
    print("-" * 30)
    
    try:
        from osrm_client import OSRMClient
        
        client = OSRMClient()
        
        # –¢–µ—Å—Ç –ª–æ–∫–∞—Ü–∏–∏
        locations = [
            (42.6977, 23.3219),  # –°–æ—Ñ–∏—è —Ü–µ–Ω—Ç—ä—Ä  
            (42.7014, 23.3206),  # –ë–ª–∏–∑–æ –¥–æ —Ü–µ–Ω—Ç—ä—Ä–∞
        ]
        
        matrix = client.get_distance_matrix(locations)
        
        print("‚úÖ OSRM –∫–ª–∏–µ–Ω—Ç —Ä–∞–±–æ—Ç–∏ –ø—Ä–∞–≤–∏–ª–Ω–æ")
        print(f"üìè –†–∞–∑—Å—Ç–æ—è–Ω–∏–µ: {matrix.distances[0][1]/1000:.2f} –∫–º")
        print(f"‚è±Ô∏è –í—Ä–µ–º–µ: {matrix.durations[0][1]/60:.1f} –º–∏–Ω—É—Ç–∏")
        
        client.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –ì—Ä–µ—à–∫–∞ –≤ OSRM –∫–ª–∏–µ–Ω—Ç: {e}")
        return False

def test_fallback_functionality():
    """–¢–µ—Å—Ç–≤–∞ fallback —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç—Ç–∞"""
    print(f"\nüîÑ –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ fallback —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç")
    print("-" * 45)
    
    try:
        from osrm_client import OSRMClient
        from config import OSRMConfig
        
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å –Ω–µ–≤–∞–ª–∏–¥–µ–Ω –ª–æ–∫–∞–ª–µ–Ω —Å—ä—Ä–≤—ä—Ä –∏ fallback
        test_config = OSRMConfig(
            base_url="http://localhost:9999",  # –Ω–µ–≤–∞–ª–∏–¥–µ–Ω –ø–æ—Ä—Ç
            fallback_to_public=True,
            public_osrm_url="http://router.project-osrm.org",
            timeout_seconds=5,
            retry_attempts=1
        )
        
        client = OSRMClient(test_config)
        
        locations = [
            (42.6977, 23.3219),
            (42.7014, 23.3206)
        ]
        
        matrix = client.get_distance_matrix(locations)
        
        print("‚úÖ Fallback —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç —Ä–∞–±–æ—Ç–∏")
        print("üì° –£—Å–ø–µ—à–Ω–æ –ø—Ä–µ–≤–∫–ª—é—á–≤–∞–Ω–µ –∫—ä–º –ø—É–±–ª–∏—á–µ–Ω OSRM —Å—ä—Ä–≤—ä—Ä")
        
        client.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ fallback: {e}")
        return False

def recommend_osrm_setup():
    """–î–∞–≤–∞ –ø—Ä–µ–ø–æ—Ä—ä–∫–∏ –∑–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ OSRM"""
    print(f"\nüí° –ü–†–ï–ü–û–†–™–ö–ò –ó–ê –ù–ê–°–¢–†–û–ô–ö–ê –ù–ê –õ–û–ö–ê–õ–ï–ù OSRM:")
    print("=" * 50)
    
    print("1. –ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ —Å Docker:")
    print("   docker pull osrm/osrm-backend")
    print()
    
    print("2. –ò–∑—Ç–µ–≥–ª—è–Ω–µ –Ω–∞ –ë—ä–ª–≥–∞—Ä–∏—è OSM –¥–∞–Ω–Ω–∏:")
    print("   wget https://download.geofabrik.de/europe/bulgaria-latest.osm.pbf")
    print()
    
    print("3. –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –¥–∞–Ω–Ω–∏—Ç–µ:")
    print("   docker run -t -v \"${PWD}:/data\" osrm/osrm-backend osrm-extract -p /opt/car.lua /data/bulgaria-latest.osm.pbf")
    print("   docker run -t -v \"${PWD}:/data\" osrm/osrm-backend osrm-partition /data/bulgaria-latest.osrm")
    print("   docker run -t -v \"${PWD}:/data\" osrm/osrm-backend osrm-customize /data/bulgaria-latest.osrm")
    print()
    
    print("4. –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —Å—ä—Ä–≤—ä—Ä–∞:")
    print("   docker run -t -i -p 5000:5000 -v \"${PWD}:/data\" osrm/osrm-backend osrm-routed --algorithm mld /data/bulgaria-latest.osrm")
    print()
    
    print("5. –¢–µ—Å—Ç–≤–∞–Ω–µ:")
    print("   curl \"http://localhost:5000/health\"")

def main():
    """–°—Ç–∞—Ä—Ç–∏—Ä–∞ –≤—Å–∏—á–∫–∏ —Ç–µ—Å—Ç–æ–≤–µ"""
    print("üß™ –¢–ï–°–¢–í–ê–ù–ï –ù–ê –õ–û–ö–ê–õ–ï–ù OSRM –°–™–†–í–™–†")
    print("=" * 60)
    
    tests = [
        ("–í—Ä—ä–∑–∫–∞ —Å –ª–æ–∫–∞–ª–µ–Ω OSRM", test_local_osrm_connection),
        ("Matrix –∑–∞—è–≤–∫–∞", test_local_osrm_matrix)
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        print(f"\nüîπ –¢–µ—Å—Ç: {test_name}")
        if test_func():
            passed += 1
    
    print(f"\nüìä –†–ï–ó–£–õ–¢–ê–¢–ò: {passed}/{total} —Ç–µ—Å—Ç–æ–≤–µ –ø—Ä–µ–º–∏–Ω–∞—Ö–∞")
    
    if passed == 0:
        print("\n‚ö†Ô∏è –õ–æ–∫–∞–ª–µ–Ω OSRM —Å—ä—Ä–≤—ä—Ä –Ω–µ –µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω.")
        print("üí° –°–ª–µ–¥–≤–∞–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏—Ç–µ –≤ README.md –∑–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ OSRM")
    elif passed < total:
        print(f"\n‚ö†Ô∏è {total - passed} —Ç–µ—Å—Ç–∞ –Ω–µ –ø—Ä–µ–º–∏–Ω–∞—Ö–∞.")
    else:
        print("\nüéâ –õ–æ–∫–∞–ª–µ–Ω OSRM —Å—ä—Ä–≤—ä—Ä —Ä–∞–±–æ—Ç–∏ –æ—Ç–ª–∏—á–Ω–æ!")

if __name__ == "__main__":
    main() 