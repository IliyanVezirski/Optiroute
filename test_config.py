#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from config import MainConfig
import config
import importlib

def test_osrm_limits():
    """–ü–æ–∫–∞–∑–≤–∞ –∞–∫—Ç—É–∞–ª–Ω–∏—Ç–µ OSRM –ª–∏–º–∏—Ç–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    config = MainConfig()
    
    print("üåê OSRM –ù–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print(f"   üìä Chunk size: {config.osrm.chunk_size}")
    print(f"   ‚è±Ô∏è Timeout: {config.osrm.timeout_seconds}s")
    print(f"   üîÑ Retry attempts: {config.osrm.retry_attempts}")
    print(f"   üöÄ Average speed: {config.osrm.average_speed_kmh} km/h")
    print()
    
    # –ü—Ä–µ—Å–º—è—Ç–∞–Ω–µ –∑–∞ —Ä–∞–∑–ª–∏—á–Ω–∏ –±—Ä–æ—è –∫–ª–∏–µ–Ω—Ç–∏
    test_clients = [50, 100, 150, 250, 500]
    
    print("üìà Chunks –∑–∞ —Ä–∞–∑–ª–∏—á–Ω–∏ –±—Ä–æ—è –∫–ª–∏–µ–Ω—Ç–∏:")
    for clients in test_clients:
        chunks_per_side = (clients + config.osrm.chunk_size - 1) // config.osrm.chunk_size
        total_chunks = chunks_per_side * chunks_per_side
        print(f"   {clients:3d} –∫–ª–∏–µ–Ω—Ç–∞: {total_chunks:2d} chunks")
    
    print()
    print("‚ö° –õ–∏–º–∏—Ç–∏:")
    print("   ‚Ä¢ –õ–æ–∫–∞–ª–µ–Ω OSRM: ~100 –ª–æ–∫–∞—Ü–∏–∏ per chunk (–ø—Ä–µ–ø–æ—Ä—ä—á–∏—Ç–µ–ª–Ω–æ)")
    print("   ‚Ä¢ –ü—É–±–ª–∏—á–µ–Ω OSRM GET: ~25 –ª–æ–∫–∞—Ü–∏–∏ per chunk")
    print("   ‚Ä¢ –ü—É–±–ª–∏—á–µ–Ω OSRM POST: ~100 –ª–æ–∫–∞—Ü–∏–∏ per chunk")
    print("   ‚Ä¢ Route API: 1 –∑–∞—è–≤–∫–∞ = 1 –º–∞—Ä—à—Ä—É—Ç (–ú–ù–û–ì–û –ë–ê–í–ù–û –∑–∞ >15 –ª–æ–∫–∞—Ü–∏–∏)")

if __name__ == "__main__":
    test_osrm_limits()

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª–Ω–æ —Ä–µ—Å—Ç–∞—Ä—Ç–∏—Ä–∞–º–µ config
importlib.reload(config)

cfg = config.get_config()

print('=== –õ–û–ö–ê–¶–ò–ò ===')
print(f'–û—Å–Ω–æ–≤–Ω–æ –¥–µ–ø–æ: {cfg.locations.depot_location}')
print(f'–¶–µ–Ω—Ç—ä—Ä –ª–æ–∫–∞—Ü–∏—è: {cfg.locations.center_location}')

print('\n=== –ü–†–ï–í–û–ó–ù–ò –°–†–ï–î–°–¢–í–ê ===')
for i, vehicle in enumerate(cfg.vehicles):
    print(f'{i+1}. {vehicle.vehicle_type.value}:')
    print(f'   capacity: {vehicle.capacity}')
    print(f'   count: {vehicle.count}')
    print(f'   start_location: {vehicle.start_location}')
    if vehicle.vehicle_type.value == 'center_bus':
        print(f'   üìç CENTER_BUS —Ç—Ä—è–±–≤–∞ –¥–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞ –æ—Ç: {cfg.locations.center_location}')
        print(f'   ‚úÖ –ü—Ä–∞–≤–∏–ª–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {vehicle.start_location == cfg.locations.center_location}')
    print()

# –¢–µ—Å—Ç –Ω–∞ enabled vehicles
enabled_vehicles = config.config_manager.get_enabled_vehicles()
print('=== –í–ö–õ–Æ–ß–ï–ù–ò –ü–†–ï–í–û–ó–ù–ò –°–†–ï–î–°–¢–í–ê ===')
for vehicle in enabled_vehicles:
    print(f'{vehicle.vehicle_type.value}: start_location = {vehicle.start_location}') 