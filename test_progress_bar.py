"""
–¢–µ—Å—Ç –Ω–∞ –Ω–æ–≤–∏—è –ø—Ä–æ–≥—Ä–µ—Å –±–∞—Ä –∑–∞ OR-Tools –∏ OSRM
"""

from main import CVRPApplication

def test_progress_bar_short():
    """–¢–µ—Å—Ç —Å –∫—Ä–∞—Ç–∫–æ timeout –∑–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è"""
    print("üß™ –¢–ï–°–¢ –ù–ê –ü–†–û–ì–†–ï–° –ë–ê–†")
    print("=" * 50)
    
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞ –±—ä—Ä–∑ —Ç–µ—Å—Ç (60 —Å–µ–∫—É–Ω–¥–∏)
    quick_config = {
        "cvrp": {
            "time_limit_seconds": 60,  # 1 –º–∏–Ω—É—Ç–∞ –∑–∞ –¥–µ–º–æ
            "log_search": False,       # –∏–∑–∫–ª—é—á–≤–∞–º–µ verbose –ª–æ–≥–æ–≤–µ
        },
        "osrm": {
            "chunk_size": 50,          # –ø–æ-–º–∞–ª–∫–∏ chunks –∑–∞ demo
        }
    }
    
    print("‚öôÔ∏è –ò–∑–ø–æ–ª–∑–≤–∞–º –∫—Ä–∞—Ç—ä–∫ timeout (60 —Å–µ–∫—É–Ω–¥–∏) –∑–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è")
    print("üìä –©–µ –≤–∏–¥–∏—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å –±–∞—Ä–æ–≤–µ –∑–∞:")
    print("   1. üì° OSRM Matrix –∑–∞—è–≤–∫–∏ (–∞–∫–æ –∏–º–∞ chunking)")
    print("   2. üîÑ OR-Tools –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è")
    print()
    
    app = CVRPApplication()
    success = app.run_with_custom_config(quick_config, "data/input.xlsx")
    
    if success:
        print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤—ä—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –ì—Ä–µ—à–∫–∞ –≤ —Ç–µ—Å—Ç–∞")
    
    return success

def test_progress_bar_normal():
    """–¢–µ—Å—Ç —Å –Ω–æ—Ä–º–∞–ª–µ–Ω timeout (5 –º–∏–Ω—É—Ç–∏)"""
    print("üß™ –¢–ï–°–¢ –° –ù–û–†–ú–ê–õ–ï–ù TIMEOUT")
    print("=" * 50)
    
    normal_config = {
        "cvrp": {
            "time_limit_seconds": 300,  # 5 –º–∏–Ω—É—Ç–∏
            "log_search": False,
        }
    }
    
    print("‚öôÔ∏è –ù–æ—Ä–º–∞–ª–µ–Ω timeout (300 —Å–µ–∫—É–Ω–¥–∏ = 5 –º–∏–Ω—É—Ç–∏)")
    print()
    
    app = CVRPApplication()
    success = app.run_with_custom_config(normal_config, "data/input.xlsx")
    
    return success

def demonstrate_progress_features():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏—Ç–µ –Ω–∞ –ø—Ä–æ–≥—Ä–µ—Å –±–∞—Ä–∞"""
    print("üìä –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò –ù–ê –ü–†–û–ì–†–ï–° –ë–ê–†–ê:")
    print("=" * 60)
    
    print("üîÑ OR-Tools –ø—Ä–æ–≥—Ä–µ—Å –±–∞—Ä –ø–æ–∫–∞–∑–≤–∞:")
    print("   ‚Ä¢ –¢–µ–∫—É—â–æ –≤—Ä–µ–º–µ / –º–∞–∫—Å–∏–º–∞–ª–Ω–æ –≤—Ä–µ–º–µ")
    print("   ‚Ä¢ –ë—Ä–æ–π –Ω–∞–º–µ—Ä–µ–Ω–∏ —Ä–µ—à–µ–Ω–∏—è")
    print("   ‚Ä¢ –ù–∞–π-–¥–æ–±—Ä–æ—Ç–æ —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ –≤ –∫–º")
    print("   ‚Ä¢ –û—Å—Ç–∞–≤–∞—â–æ –≤—Ä–µ–º–µ")
    print("   ‚Ä¢ –í–∏–∑—É–∞–ª–µ–Ω –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å")
    print()
    
    print("üì° OSRM –ø—Ä–æ–≥—Ä–µ—Å –±–∞—Ä –ø–æ–∫–∞–∑–≤–∞:")
    print("   ‚Ä¢ –ë—Ä–æ–π –æ–±—Ä–∞–±–æ—Ç–µ–Ω–∏ chunks")
    print("   ‚Ä¢ –¢–µ–∫—É—â chunk (–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏)")
    print("   ‚Ä¢ –†–∞–∑–º–µ—Ä –Ω–∞ chunk (–±—Ä–æ–π –ª–æ–∫–∞—Ü–∏–∏)")
    print("   ‚Ä¢ –°–∫–æ—Ä–æ—Å—Ç –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞")
    print()
    
    print("‚è±Ô∏è –í–†–ï–ú–ï–í–ò –ï–¢–ê–ü–ò:")
    print("   1. OSRM –∑–∞—è–≤–∫–∏: 30-120 —Å–µ–∫ –∑–∞ 150-250 –∫–ª–∏–µ–Ω—Ç–∞")
    print("   2. OR-Tools –ø—ä—Ä–≤–æ —Ä–µ—à–µ–Ω–∏–µ: 30-90 —Å–µ–∫") 
    print("   3. OR-Tools –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è: –¥–æ 20 –º–∏–Ω—É—Ç–∏")
    print()

if __name__ == "__main__":
    demonstrate_progress_features()
    
    import sys
    if len(sys.argv) > 1:
        if sys.argv[1] == "short":
            test_progress_bar_short()
        elif sys.argv[1] == "normal":
            test_progress_bar_normal()
    else:
        print("üöÄ –ó–∞ —Ç–µ—Å—Ç–≤–∞–Ω–µ:")
        print("   py test_progress_bar.py short   # –ö—Ä–∞—Ç—ä–∫ —Ç–µ—Å—Ç (60 —Å–µ–∫)")
        print("   py test_progress_bar.py normal  # –ù–æ—Ä–º–∞–ª–µ–Ω —Ç–µ—Å—Ç (5 –º–∏–Ω)")
        print()
        
        # –°—Ç–∞—Ä—Ç–∏—Ä–∞–º–µ –∫—Ä–∞—Ç—ä–∫ —Ç–µ—Å—Ç –ø–æ –ø–æ–¥—Ä–∞–∑–±–∏—Ä–∞–Ω–µ
        test_progress_bar_short() 