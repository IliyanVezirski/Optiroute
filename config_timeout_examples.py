"""
–ü—Ä–∏–º–µ—Ä–∏ –∑–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–∞–Ω–µ –Ω–∞ OR-Tools timeout —Å–ø–æ—Ä–µ–¥ —Ä–∞–∑–ª–∏—á–Ω–∏ —Å—Ü–µ–Ω–∞—Ä–∏–∏
"""

from config import get_config, CVRPConfig
from main import CVRPApplication

def quick_optimization_config():
    """–ë—ä—Ä–∑–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞ —Ç–µ—Å—Ç–≤–∞–Ω–µ - 60 —Å–µ–∫—É–Ω–¥–∏"""
    return {
        "cvrp": {
            "time_limit_seconds": 60,  # 1 –º–∏–Ω—É—Ç–∞
            "first_solution_strategy": "PATH_CHEAPEST_ARC",
            "local_search_metaheuristic": "GUIDED_LOCAL_SEARCH",
            "log_search": True
        }
    }

def standard_business_config():
    """–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ –±–∏–∑–Ω–µ—Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è - 5 –º–∏–Ω—É—Ç–∏"""
    return {
        "cvrp": {
            "time_limit_seconds": 300,  # 5 –º–∏–Ω—É—Ç–∏ (current)
            "first_solution_strategy": "PATH_CHEAPEST_ARC", 
            "local_search_metaheuristic": "GUIDED_LOCAL_SEARCH",
            "log_search": True
        }
    }

def thorough_optimization_config():
    """–ó–∞–¥—ä–ª–±–æ—á–µ–Ω–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è - 15 –º–∏–Ω—É—Ç–∏"""
    return {
        "cvrp": {
            "time_limit_seconds": 900,  # 15 –º–∏–Ω—É—Ç–∏
            "first_solution_strategy": "PATH_CHEAPEST_ARC",
            "local_search_metaheuristic": "GUIDED_LOCAL_SEARCH", 
            "log_search": True
        }
    }

def maximum_optimization_config():
    """–ú–∞–∫—Å–∏–º–∞–ª–Ω–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è - 30 –º–∏–Ω—É—Ç–∏"""
    return {
        "cvrp": {
            "time_limit_seconds": 1800,  # 30 –º–∏–Ω—É—Ç–∏
            "first_solution_strategy": "AUTOMATIC",
            "local_search_metaheuristic": "SIMULATED_ANNEALING",
            "log_search": True
        }
    }

def adaptive_timeout_by_problem_size(num_customers):
    """–ê–¥–∞–ø—Ç–∏–≤–µ–Ω timeout —Å–ø–æ—Ä–µ–¥ –±—Ä–æ—è –∫–ª–∏–µ–Ω—Ç–∏"""
    if num_customers <= 20:
        timeout = 60        # 1 –º–∏–Ω—É—Ç–∞ –∑–∞ –º–∞–ª–∫–∏ –ø—Ä–æ–±–ª–µ–º–∏
    elif num_customers <= 50:
        timeout = 300       # 5 –º–∏–Ω—É—Ç–∏ –∑–∞ —Å—Ä–µ–¥–Ω–∏ –ø—Ä–æ–±–ª–µ–º–∏  
    elif num_customers <= 100:
        timeout = 900       # 15 –º–∏–Ω—É—Ç–∏ –∑–∞ –≥–æ–ª–µ–º–∏ –ø—Ä–æ–±–ª–µ–º–∏
    else:
        timeout = 1800      # 30 –º–∏–Ω—É—Ç–∏ –∑–∞ –º–Ω–æ–≥–æ –≥–æ–ª–µ–º–∏ –ø—Ä–æ–±–ª–µ–º–∏
    
    return {
        "cvrp": {
            "time_limit_seconds": timeout,
            "first_solution_strategy": "PATH_CHEAPEST_ARC",
            "local_search_metaheuristic": "GUIDED_LOCAL_SEARCH",
            "log_search": True
        }
    }

def run_with_custom_timeout(timeout_seconds, input_file=None):
    """–°—Ç–∞—Ä—Ç–∏—Ä–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–∞–Ω timeout"""
    print(f"üîÑ –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ —Å timeout: {timeout_seconds} —Å–µ–∫—É–Ω–¥–∏ ({timeout_seconds/60:.1f} –º–∏–Ω—É—Ç–∏)")
    
    custom_config = {
        "cvrp": {
            "time_limit_seconds": timeout_seconds,
            "log_search": True  # –∑–∞ –¥–∞ –≤–∏–¥–∏—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å–∞
        }
    }
    
    app = CVRPApplication()
    success = app.run_with_custom_config(custom_config, input_file)
    
    return success

def benchmark_different_timeouts(input_file=None):
    """–¢–µ—Å—Ç–≤a —Ä–∞–∑–ª–∏—á–Ω–∏ timeout —Å—Ç–æ–π–Ω–æ—Å—Ç–∏ –∑–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ"""
    timeouts = [60, 180, 300, 600, 900]  # 1–º–∏–Ω, 3–º–∏–Ω, 5–º–∏–Ω, 10–º–∏–Ω, 15–º–∏–Ω
    
    print("üß™ BENCHMARK –ù–ê –†–ê–ó–õ–ò–ß–ù–ò TIMEOUT –°–¢–û–ô–ù–û–°–¢–ò")
    print("=" * 60)
    
    results = []
    
    for timeout in timeouts:
        print(f"\nüîÑ –¢–µ—Å—Ç–≤–∞–Ω–µ —Å timeout: {timeout} —Å–µ–∫—É–Ω–¥–∏")
        print("-" * 40)
        
        import time
        start_time = time.time()
        
        success = run_with_custom_timeout(timeout, input_file)
        
        elapsed_time = time.time() - start_time
        
        result = {
            "timeout": timeout,
            "success": success,
            "actual_time": elapsed_time
        }
        results.append(result)
        
        print(f"‚úÖ –†–µ–∑—É–ª—Ç–∞—Ç: {'–£—Å–ø–µ—à–Ω–æ' if success else '–ù–µ—É—Å–ø–µ—à–Ω–æ'}")
        print(f"‚è±Ô∏è –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª–Ω–æ –≤—Ä–µ–º–µ: {elapsed_time:.1f} —Å–µ–∫—É–Ω–¥–∏")
    
    print(f"\nüìä –û–ë–û–ë–©–ï–ù–ò–ï –ù–ê –†–ï–ó–£–õ–¢–ê–¢–ò–¢–ï:")
    print("-" * 40)
    for result in results:
        status = "‚úÖ" if result["success"] else "‚ùå"
        print(f"{status} {result['timeout']}s ‚Üí {result['actual_time']:.1f}s —Ä–µ–∞–ª–Ω–æ –≤—Ä–µ–º–µ")
    
    return results

# –ü—Ä–µ–ø–æ—Ä—ä–∫–∏ —Å–ø–æ—Ä–µ–¥ —Å–ª—É—á–∞—è –Ω–∞ —É–ø–æ—Ç—Ä–µ–±–∞
TIMEOUT_RECOMMENDATIONS = {
    "development_testing": {
        "timeout": 60,
        "description": "–ë—ä—Ä–∑–æ —Ç–µ—Å—Ç–≤–∞–Ω–µ –ø–æ –≤—Ä–µ–º–µ –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞"
    },
    "daily_operations": {
        "timeout": 300, 
        "description": "–ï–∂–µ–¥–Ω–µ–≤–Ω–∏ –±–∏–∑–Ω–µ—Å –æ–ø–µ—Ä–∞—Ü–∏–∏ - –±–∞–ª–∞–Ω—Å —Å–∫–æ—Ä–æ—Å—Ç/–∫–∞—á–µ—Å—Ç–≤–æ"
    },
    "weekly_planning": {
        "timeout": 900,
        "description": "–°–µ–¥–º–∏—á–Ω–æ –ø–ª–∞–Ω–∏—Ä–∞–Ω–µ - –ø–æ-–¥–æ–±—Ä–æ –∫–∞—á–µ—Å—Ç–≤–æ"
    },
    "strategic_optimization": {
        "timeout": 1800,
        "description": "–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ –ø–ª–∞–Ω–∏—Ä–∞–Ω–µ - –º–∞–∫—Å–∏–º–∞–ª–Ω–æ –∫–∞—á–µ—Å—Ç–≤–æ"
    },
    "research_analysis": {
        "timeout": 3600,
        "description": "–ò–∑—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—Å–∫–∏ –∞–Ω–∞–ª–∏–∑ - –Ω–∞–π-–¥–æ–±—Ä–∏ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏"
    }
}

def print_timeout_recommendations():
    """–û—Ç–ø–µ—á–∞—Ç–≤–∞ –ø—Ä–µ–ø–æ—Ä—ä–∫–∏ –∑–∞ timeout"""
    print("üí° –ü–†–ï–ü–û–†–™–ö–ò –ó–ê OR-TOOLS TIMEOUT:")
    print("=" * 50)
    
    for use_case, config in TIMEOUT_RECOMMENDATIONS.items():
        timeout_minutes = config["timeout"] / 60
        print(f"\nüéØ {use_case.replace('_', ' ').title()}:")
        print(f"   ‚è±Ô∏è Timeout: {config['timeout']} —Å–µ–∫—É–Ω–¥–∏ ({timeout_minutes:.1f} –º–∏–Ω—É—Ç–∏)")
        print(f"   üìù –û–ø–∏—Å–∞–Ω–∏–µ: {config['description']}")

if __name__ == "__main__":
    print_timeout_recommendations()
    
    print(f"\nüîß –ó–∞ –ø—Ä–æ–º—è–Ω–∞ –Ω–∞ timeout, —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–π—Ç–µ config.py:")
    print("   cvrp.time_limit_seconds = 900  # 15 –º–∏–Ω—É—Ç–∏")
    
    print(f"\nüß™ –ó–∞ —Ç–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω–∏ timeout —Å—Ç–æ–π–Ω–æ—Å—Ç–∏:")
    print("   py config_timeout_examples.py")
    print("   benchmark_different_timeouts('data/sample.xlsx')") 