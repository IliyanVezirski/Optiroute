"""
–¢–µ—Å—Ç —Ñ–∞–π–ª –∑–∞ –Ω–æ–≤–∞—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç –Ω–∞ –∫–∞—Ä—Ç–∞—Ç–∞
"""

from output_handler import OutputHandler, VEHICLE_SETTINGS
from cvrp_solver import CVRPSolution, Route, VehicleType
from warehouse_manager import WarehouseAllocation
from input_handler import Customer

def test_new_map_features():
    """–¢–µ—Å—Ç–≤–∞ –Ω–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ –∫–∞—Ä—Ç–∞—Ç–∞"""
    
    print("üó∫Ô∏è  –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ –Ω–æ–≤–∞—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç –Ω–∞ –∫–∞—Ä—Ç–∞—Ç–∞")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏—Ç–µ –∑–∞ –ø—Ä–µ–≤–æ–∑–Ω–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞
    print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞ –ø—Ä–µ–≤–æ–∑–Ω–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞:")
    for vehicle_type, settings in VEHICLE_SETTINGS.items():
        print(f"   {vehicle_type}: {settings['name']} ({settings['color']}, {settings['icon']})")
    
    print()
    
    # –¢–µ—Å—Ç 2: –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ —Ç–µ—Å—Ç–æ–≤–∏ –¥–∞–Ω–Ω–∏
    print("‚úÖ –°—ä–∑–¥–∞–≤–∞–º —Ç–µ—Å—Ç–æ–≤–∏ –¥–∞–Ω–Ω–∏...")
    
    # –¢–µ—Å—Ç–æ–≤–∏ –∫–ª–∏–µ–Ω—Ç–∏
    customers = [
        Customer("1", "–ö–ª–∏–µ–Ω—Ç 1", 50.0, "42.7,23.3", (42.7, 23.3)),
        Customer("2", "–ö–ª–∏–µ–Ω—Ç 2", 30.0, "42.71,23.31", (42.71, 23.31)),
        Customer("3", "–ö–ª–∏–µ–Ω—Ç 3", 40.0, "42.72,23.32", (42.72, 23.32)),
    ]
    
    # –¢–µ—Å—Ç–æ–≤–∏ –º–∞—Ä—à—Ä—É—Ç–∏
    routes = [
        Route(VehicleType.INTERNAL_BUS, customers[:2], 0, 0, 0),
        Route(VehicleType.EXTERNAL_BUS, customers[2:], 0, 0, 0),
    ]
    
    solution = CVRPSolution(routes, 0, True)
    
    # –¢–µ—Å—Ç–æ–≤–æ —Ä–∞–∑–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤ —Å–∫–ª–∞–¥–∞
    warehouse_allocation = WarehouseAllocation([], customers)
    
    depot_location = (42.695785029219415, 23.23165887245312)
    
    print("   - –°—ä–∑–¥–∞–¥–µ–Ω–∏ 3 –∫–ª–∏–µ–Ω—Ç–∞")
    print("   - –°—ä–∑–¥–∞–¥–µ–Ω–∏ 2 –º–∞—Ä—à—Ä—É—Ç–∞")
    print("   - –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ –¥–µ–ø–æ")
    
    print()
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ OutputHandler
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ OutputHandler...")
    
    try:
        handler = OutputHandler()
        print("   - OutputHandler —Å—ä–∑–¥–∞–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –û–ø–∏—Ç –∑–∞ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∫–∞—Ä—Ç–∞ (–±–µ–∑ –∑–∞–ø–∏—Å)
        map_generator = handler.map_generator
        print("   - Map generator –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–Ω")
        
        print("   - –ì–æ—Ç–æ–≤ –∑–∞ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –∫–∞—Ä—Ç–∞ —Å:")
        print("     ‚Ä¢ –†–∞–∑–ª–∏—á–Ω–∏ –ø–∏–Ω—á–µ—Ç–∞ –∑–∞ –≤—Å–µ–∫–∏ —Ç–∏–ø –∞–≤—Ç–æ–±—É—Å")
        print("     ‚Ä¢ –ù–æ–º–µ—Ä–∏—Ä–∞–Ω–∏ –º–∞—Ä–∫–µ—Ä–∏ –∑–∞ –ø–æ—Ä–µ–¥–Ω–æ—Å—Ç—Ç–∞")
        print("     ‚Ä¢ –õ–∏–Ω–∏–∏ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç–∏—Ç–µ")
        print("     ‚Ä¢ –õ–µ–≥–µ–Ω–¥–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
        print("     ‚Ä¢ –ë–ï–ó –ø–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ —Å–∫–ª–∞–¥–æ–≤–∏ –∫–ª–∏–µ–Ω—Ç–∏")
        
    except Exception as e:
        print(f"   ‚ùå –ì—Ä–µ—à–∫–∞: {e}")
    
    print()
    print("üéØ –ó–∞–∫–ª—é—á–µ–Ω–∏–µ:")
    print("   –ù–æ–≤–∞—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç –µ –≥–æ—Ç–æ–≤–∞ –∑–∞ —Ç–µ—Å—Ç–≤–∞–Ω–µ!")
    print("   –ó–∞ –ø—ä–ª–µ–Ω —Ç–µ—Å—Ç –∏–∑–ø—ä–ª–Ω–µ—Ç–µ: python demo.py")

if __name__ == "__main__":
    test_new_map_features() 