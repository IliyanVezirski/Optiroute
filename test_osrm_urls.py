"""
–¢–µ—Å—Ç –∑–∞ OSRM URL —Ñ–æ—Ä–º–∞—Ç–∏—Ä–∞–Ω–µ
"""

from osrm_client import OSRMClient
from config import get_config
import requests

def test_osrm_urls():
    """–¢–µ—Å—Ç–≤–∞ —Ä–∞–∑–ª–∏—á–Ω–∏ OSRM URL —Ñ–æ—Ä–º–∞—Ç–∏"""
    
    print("üß™ –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ OSRM URL —Ñ–æ—Ä–º–∞—Ç–∏—Ä–∞–Ω–µ")
    print("=" * 50)
    
    config = get_config()
    client = OSRMClient(config.osrm)
    
    # –¢–µ—Å—Ç–æ–≤–∏ –ª–æ–∫–∞—Ü–∏–∏ –æ—Ç –°–æ—Ñ–∏—è, –ë—ä–ª–≥–∞—Ä–∏—è
    depot = (42.695785029219415, 23.23165887245312)  # –î–µ–ø–æ
    center = (42.69769851709216, 23.32175896081278)  # –¶–µ–Ω—Ç—ä—Ä
    test_locations = [depot, center]
    
    print(f"üè† –î–µ–ø–æ: {depot}")
    print(f"üè¢ –¶–µ–Ω—Ç—ä—Ä: {center}")
    print()
    
    # –¢–µ—Å—Ç 1: URL —Ñ–æ—Ä–º–∞—Ç–∏—Ä–∞–Ω–µ
    print("1Ô∏è‚É£ –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ URL —Ñ–æ—Ä–º–∞—Ç–∏—Ä–∞–Ω–µ:")
    url = client._build_matrix_url(test_locations)
    print(f"   üìç Matrix URL: {url}")
    print()
    
    # –¢–µ—Å—Ç 2: –û–ø–∏—Ç –∑–∞ –∑–∞—è–≤–∫–∞
    print("2Ô∏è‚É£ –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ Matrix API –∑–∞—è–≤–∫–∞:")
    try:
        # –ü—ä—Ä–≤–æ —Ç–µ—Å—Ç–≤–∞–º–µ —Å–∞–º–æ —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ —Å—ä—Ä–≤—ä—Ä–∞
        base_url = config.osrm.base_url.rstrip('/')
        status_response = requests.get(f"{base_url}/", timeout=5)
        print(f"   üü¢ –°—ä—Ä–≤—ä—Ä —Å—Ç–∞—Ç—É—Å: {status_response.status_code}")
        
        # –¢–µ—Å—Ç–≤–∞–º–µ table service 
        matrix = client.get_distance_matrix(test_locations)
        print(f"   ‚úÖ Matrix —É—Å–ø–µ—à–µ–Ω: {len(matrix.distances)}x{len(matrix.distances[0])}")
        print(f"   üìè –†–∞–∑—Å—Ç–æ—è–Ω–∏–µ: {matrix.distances[0][1]:.0f} –º–µ—Ç—Ä–∞")
        print(f"   ‚è±Ô∏è –í—Ä–µ–º–µ: {matrix.durations[0][1]:.0f} —Å–µ–∫—É–Ω–¥–∏")
        
    except Exception as e:
        print(f"   ‚ùå –ì—Ä–µ—à–∫–∞: {e}")
        
        # –¢–µ—Å—Ç–≤–∞–º–µ route service –∫–∞—Ç–æ fallback
        print("\n3Ô∏è‚É£ –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ Route API –∫–∞—Ç–æ fallback:")
        try:
            lat1, lon1 = depot
            lat2, lon2 = center
            route_url = f"{base_url}/route/v1/driving/{lon1:.6f},{lat1:.6f};{lon2:.6f},{lat2:.6f}?overview=false&steps=false"
            print(f"   üìç Route URL: {route_url}")
            
            route_response = requests.get(route_url, timeout=10)
            print(f"   üåê Route —Å—Ç–∞—Ç—É—Å: {route_response.status_code}")
            
            if route_response.status_code == 200:
                data = route_response.json()
                if data['code'] == 'Ok' and data['routes']:
                    route = data['routes'][0]
                    print(f"   ‚úÖ Route —É—Å–ø–µ—à–µ–Ω: {route['distance']:.0f}–º, {route['duration']:.0f}—Å")
                else:
                    print(f"   ‚ùå Route –≥—Ä–µ—à–∫–∞: {data.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞')}")
            else:
                print(f"   ‚ùå HTTP –≥—Ä–µ—à–∫–∞: {route_response.text}")
                
        except Exception as route_error:
            print(f"   ‚ùå Route –≥—Ä–µ—à–∫–∞: {route_error}")
    
    print()
    print("üéØ –ó–∞–∫–ª—é—á–µ–Ω–∏–µ:")
    print("   –ê–∫–æ –≤–∏–¥–∏—Ç–µ 'Matrix —É—Å–ø–µ—à–µ–Ω' - table service —Ä–∞–±–æ—Ç–∏")
    print("   –ê–∫–æ –≤–∏–¥–∏—Ç–µ 'Route —É—Å–ø–µ—à–µ–Ω' - –º–æ–∂–µ –¥–∞ —Å–µ –∏–∑–ø–æ–ª–∑–≤–∞ route fallback")
    print("   –ê–∫–æ –∏ –¥–≤–µ—Ç–µ –¥–∞–≤–∞—Ç –≥—Ä–µ—à–∫–∏ - –ø—Ä–æ–±–ª–µ–º —Å OSRM –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è—Ç–∞")
    
    client.close()

if __name__ == "__main__":
    test_osrm_urls() 